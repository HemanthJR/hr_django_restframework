serializer.py
from django.core.mail import send_mail
from django.utils.encoding import force_bytes
from django.utils.http import urlsafe_base64_encode, urlsafe_base64_decode
from django.contrib.auth.tokens import PasswordResetTokenGenerator, default_token_generator
from django.urls import reverse

token = default_token_generator.make_token(user) 
        uid = urlsafe_base64_encode(force_bytes(user.pk)) 
        
        current_site = get_current_site(request).domain 
        verification_link = f'http://{current_site}{reverse("verify_login", kwargs={"uidb64": uid, "token": token})}' 
        
        send_mail( 
            'Verify Your Login', 
            f'Please click the link to verify your login: {verification_link}', 
            'from@example.com', 
            [email], 
            fail_silently=False,
        )


views.py
from django.http import HttpResponse 
from django.utils.http import urlsafe_base64_decode 
from django.contrib.auth.tokens import PasswordResetTokenGenerator, default_token_generator
from django.contrib.auth.models import User
from django.views import View
from django.utils.encoding import force_str

class VerifyLoginView(View): 
    def get(self, request, uidb64, token, *args, **kwargs): 
        try: 
            uid = force_str(urlsafe_base64_decode(uidb64)) 
            user = User.objects.get(pk=uid) 
            if default_token_generator.check_token(user, token): 
                # Token is valid, you can log the user in or perform other actions 
                return HttpResponse('Login verified successfully.') 
            else: return HttpResponse('Invalid or expired token.') 
        except (TypeError, ValueError, OverflowError, User.DoesNotExist): 
            return HttpResponse('Invalid token.')

urls.py
path('verify-login/<uidb64>/<token>/', VerifyLoginView.as_view(), name='verify_login'),

settings.py
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'smhemanth2003@gmail.com'
EMAIL_HOST_PASSWORD = 'tirh bnsy soxf qvmo'
